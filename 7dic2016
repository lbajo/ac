	.data
msg1:	.asciiz "Introduzca un valor a insertar: "
msg2:	.asciiz "\n"
msg3:	.asciiz "Introduzca un valor a borrar: "
msg4:	.asciiz "prueba"
	.text
	
main:

	la $a0, msg1
	li $v0, 4
	syscall
	
	li $v0,5
	syscall
	
	move $a0, $v0
	li $a1, 0
	
	jal push
	
	move $s0, $v0
	
main2:

	la $a0, msg1
	li $v0, 4
	syscall
	
	li $v0,5
	syscall
	
	beqz $v0, cero
	
	move $a0, $v0
	move $a1, $s0
	
	jal push
	
	move $s0, $v0
	
	b main2
	
cero:
	la $a0, msg3
	li $v0, 4
	syscall
	
	li $v0,5
	syscall
	
	move $a0, $v0
	move $a1, $s0
	
	jal remove
	
	beqz $v0, aux
	
	li $v0,1
	syscall

	la $a0, msg2
	li $v0, 4
	syscall
	
	move $a0, $s0
	
	jal print
	
	li $v0, 10
	syscall
	
aux:
	move $a0, $s0
	
	jal print
	
	li $v0, 10
	syscall
	
create:
	
	move $v0, $a1
	move $t0, $a0
	move $t1, $a1
	
	beqz $v0, init
	
	li $a0, 8
	li $v0, 9
	syscall
	
	
	sw $t0, 0($v0)
	sw $t1, 4($v0)
	
	jr $ra
	
init:

	li $a0, 8
	li $v0, 9
	syscall
	
	li $t1, 0
	
	sw $t0, 0($v0)
	sw $t1, 4($v0)
	
	jr $ra

push:

	subu $sp, $sp, 32
	sw $ra, 20($sp)
	sw $fp, 16($sp)
	addiu $fp, $sp, 24
	
	sw $a0, 0($fp) #val
	sw $a1, 4($fp) #dir
	
	jal create
	
return_push:

	lw $ra, 20($sp)
	lw $fp, 16($sp)
	addiu $sp, $sp, 32
	jr $ra

remove:
	
	lw $v0, 4($a1)
	
	beqz $v0, return_remove
	
	lw $v0, 0($v0)
	move $v1, $a0
	
	beq $v0, $v1, delete
	
	lw $a1, 4($a1)
	
	b remove
	
delete:
	move $t0, $a1  #nodo ant
	lw $t1, 4($t0) #nodo que vamos a eliminar
	lw $t2, 4($t1) #nodo sig
	
	sw $t2,4($t0)
	move $v0, $t1
	
return_remove:
	jr $ra

print:

	subu $sp, $sp, 32
	sw $ra, 20($sp)
	sw $fp, 16($sp)
	addiu $fp, $sp, 28
	
	sw $a0, 0($fp)
	
	lw $v0, 4($a0)
	
	bnez $v0, draw
	
	lw $a0, 0($a0)
	li $v0, 1
	syscall
	
	b return_print
draw:

	move $a0, $v0
	
	jal print
	
	lw $a0, 0($fp)
	lw $a0, 0($a0)
	li $v0, 1
	syscall

return_print:

	lw $ra, 20($sp)
	lw $fp, 16($sp)
	addiu $sp, $sp, 32
	jr $ra

