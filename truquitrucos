		TRUQUITRUCOS DE SERGIO
	      ***************************
----LAGRS--
https://gsyc.urjc.es/~mortuno/index_lagrs/

-----------LABORATORIOS GSYC-----------
página lab ->https://labs.gsyc.urjc.es/
para conectarme->ssh lbajo@alpha.aulas.gsyc.urjc.es
para copiar de mi ordena al lab en home(pero sin ssh)->scp pratica.pp lbajo@alpha.aulas.gsyc.urjc.es:~
de mi ordena a una carp en el lab--> scp practica.pp amayoral@alpha.aulas.gsyc.urjc.es:/home/alumnos/amayoral/urjc/fdp/


-----------UNIX------------
ctrl+h --> ficheros ocultos en el ordena
ctrl+r --> mirar sentencias ya escritas
ls -a --> para ficheros ocultos en terminal 
ls -l --> para ver permisos en la terminal
chmod ugo +x (nombre) --> cambiar permisos 
para descargar el fichero desde el servidor sin copiar --->wget http://gsyc.es/~mortuno/st/fechas.txt

TECLADO sudo setxkbmap -layout 'es,es' -model pc105

--------JAVA--------
para ejecutar una clase desde el terminal: 
java -cp nombre.jar:/usr/share/java/junit4.jar org.junit.runner.JUnitCore p1.WorkerTest
cambiar la versión del compilador :
window-> preferencias->java compiler
para conectarse a un ordenador desde casa --> ssh lbajo@alpha11.aulas.gsyc.urjc.es
parte de guerra-->http://labs.gsyc.es/parte/detallado/linux.html
para dejar un archivo-->scp Escritorio/iterable.jar lbajo@alpha11.aulas.gsyc.urjc.es:~/AST1516
/var/log

java -jar Mars.jar --> Para abrir Mars

Cumple del líder de mordor -> 20/04

porfii

proyecto nuevo -> use a project specific jre java-8 oracle, selecciono el proyecto, src boton derecho import, archive file, selecciono, deseleccionamos el .project y el meta-inf
proyecto->build path->add libraries->junit



-----------------PYTHON------------------
sudo pip install flask
argparse--> nargs="*" número indeterminado de argumentos
	--> nargs="?" puede haber 1 ó 0 argumentos
	--> nargs="+" hay uno obligatorio pero puede haber más
Metavar-->etiqueta, no es importante
zonas horarias-> fecha que no tiene localización ->localizas la que lees -->convertir en timestamp-->(si es epoch no tienes que pasarlo a datatime)-->datetime->lo localizamos en utc->astimezone
jsonplaceholder


----------------C--------------------------
compilar, enlazar y ejecutar en C:
gcc -c -Wall -Wshadow -g temp.c
gcc -o temp temp.o
./temp


-------------------------TFG------------------------------
deep learning caffe

------------------------GO-----------------------
https://golang.org/doc/
.bashrc configurar las variables de entorno en el labo
https://golang.org/doc/install?download=go1.7.3.linux-amd64.tar.gz
http://www.goconejemplos.com/
http://www.linuxfocus.org/Castellano/September2001/article216.shtml
compilar y ejecutar -> http://www.goconejemplos.com/hola-mundo
	go run hello.go
	go build hello.go	~	./hello
test -> go test -v

gofmt -w yourcode.go
source .bashrc ->para poder compilar de otros lados


-----------------------ROBÓTICA------------------------
pswd_robots:K0buk1_A
para git(no problmas con la autentificación): git config --global http.sslVerify false
apt-cache search kinetic | grep cmake -> para buscar cosas y luego instalarlas con apt-get install

----------------------ANDROID--------------------
lorena@Lorena-PC:/usr/local/android-studio/bin$ ./studio.sh
http://www.sgoliver.net/blog/curso-de-programacion-android/indice-de-contenidos/
---------------------GITHUB--------------------
token->46d14edfc9e9bfcf3d68667eefa9560cddac10e1

git status y veo los que faltan
git add los que faltan
git status comprobamos que se ha subido todo
git commit -m "Subiendo mi ejemplo de Bootstrap"
git status
git push para subir y pide user y contraseña
git pull para actualizar cambios del repositorio a mi ordena
para entregar git push
hacer el commit cada vez que hago cambios en el repo

python -m SimpleHTTPServer
localhost:8000 (navegador)



